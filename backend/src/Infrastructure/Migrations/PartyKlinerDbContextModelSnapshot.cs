// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PartyKlinest.Infrastructure.Data;

#nullable disable

namespace PartyKlinest.Infrastructure.Migrations
{
    [DbContext(typeof(PartyKlinerDbContext))]
    partial class PartyKlinerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PartyKlinest.ApplicationCore.Entities.Orders.Address", b =>
                {
                    b.Property<long>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("address_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("AddressId"));

                    b.Property<string>("BuildingNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("building_number");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("character varying(90)")
                        .HasColumnName("country");

                    b.Property<int?>("FlatNumber")
                        .HasColumnType("integer")
                        .HasColumnName("flat_number");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("postal_code");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)")
                        .HasColumnName("street");

                    b.HasKey("AddressId")
                        .HasName("pk_addresses");

                    b.ToTable("addresses", (string)null);
                });

            modelBuilder.Entity("PartyKlinest.ApplicationCore.Entities.Orders.Opinions.Opinion", b =>
                {
                    b.Property<long>("OpinionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("opinion_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("OpinionId"));

                    b.Property<string>("AdditionalInfo")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("character varying(4096)")
                        .HasColumnName("additional_info");

                    b.Property<int>("Rating")
                        .HasColumnType("integer")
                        .HasColumnName("rating");

                    b.HasKey("OpinionId")
                        .HasName("pk_opinions");

                    b.ToTable("opinions", (string)null);
                });

            modelBuilder.Entity("PartyKlinest.ApplicationCore.Entities.Orders.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("order_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("OrderId"));

                    b.Property<long>("AddressId")
                        .HasColumnType("bigint")
                        .HasColumnName("address_id");

                    b.Property<long?>("CleanerId")
                        .HasColumnType("bigint")
                        .HasColumnName("cleaner_id");

                    b.Property<long?>("CleanersOpinionId")
                        .HasColumnType("bigint")
                        .HasColumnName("cleaners_opinion_id");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("client_id");

                    b.Property<long?>("ClientsOpinionId")
                        .HasColumnType("bigint")
                        .HasColumnName("clients_opinion_id");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<decimal>("MaxPrice")
                        .HasColumnType("money")
                        .HasColumnName("max_price");

                    b.Property<int>("MessLevel")
                        .HasColumnType("integer")
                        .HasColumnName("mess_level");

                    b.Property<int>("MinCleanerRating")
                        .HasColumnType("integer")
                        .HasColumnName("min_cleaner_rating");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("OrderId")
                        .HasName("pk_orders");

                    b.HasIndex("AddressId")
                        .HasDatabaseName("ix_orders_address_id");

                    b.HasIndex("CleanerId")
                        .HasDatabaseName("ix_orders_cleaner_id");

                    b.HasIndex("CleanersOpinionId")
                        .HasDatabaseName("ix_orders_cleaners_opinion_id");

                    b.HasIndex("ClientId")
                        .HasDatabaseName("ix_orders_client_id");

                    b.HasIndex("ClientsOpinionId")
                        .HasDatabaseName("ix_orders_clients_opinion_id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("PartyKlinest.ApplicationCore.Entities.Users.Cleaners.Cleaner", b =>
                {
                    b.Property<long>("CleanerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("cleaner_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CleanerId"));

                    b.Property<int>("MaxMessLevel")
                        .HasColumnType("integer")
                        .HasColumnName("max_mess_level");

                    b.Property<int>("MinClientRating")
                        .HasColumnType("integer")
                        .HasColumnName("min_client_rating");

                    b.Property<decimal>("MinPrice")
                        .HasColumnType("money")
                        .HasColumnName("min_price");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("CleanerId")
                        .HasName("pk_cleaners");

                    b.ToTable("cleaners", (string)null);
                });

            modelBuilder.Entity("PartyKlinest.ApplicationCore.Entities.Users.Cleaners.ScheduleEntry", b =>
                {
                    b.Property<long>("ScheduleEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("schedule_entry_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ScheduleEntryId"));

                    b.Property<long>("CleanerId")
                        .HasColumnType("bigint")
                        .HasColumnName("cleaner_id");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("integer")
                        .HasColumnName("day_of_week");

                    b.Property<TimeOnly>("End")
                        .HasColumnType("time without time zone")
                        .HasColumnName("end");

                    b.Property<TimeOnly>("Start")
                        .HasColumnType("time without time zone")
                        .HasColumnName("start");

                    b.HasKey("ScheduleEntryId")
                        .HasName("pk_schedule_entries");

                    b.HasIndex("CleanerId")
                        .HasDatabaseName("ix_schedule_entries_cleaner_id");

                    b.ToTable("schedule_entries", (string)null);
                });

            modelBuilder.Entity("PartyKlinest.ApplicationCore.Entities.Users.Client", b =>
                {
                    b.Property<long>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("client_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ClientId"));

                    b.HasKey("ClientId")
                        .HasName("pk_clients");

                    b.ToTable("clients", (string)null);
                });

            modelBuilder.Entity("PartyKlinest.ApplicationCore.Entities.Orders.Order", b =>
                {
                    b.HasOne("PartyKlinest.ApplicationCore.Entities.Orders.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orders_addresses_address_id");

                    b.HasOne("PartyKlinest.ApplicationCore.Entities.Users.Cleaners.Cleaner", "Cleaner")
                        .WithMany()
                        .HasForeignKey("CleanerId")
                        .HasConstraintName("fk_orders_cleaners_cleaner_id");

                    b.HasOne("PartyKlinest.ApplicationCore.Entities.Orders.Opinions.Opinion", "CleanersOpinion")
                        .WithMany()
                        .HasForeignKey("CleanersOpinionId")
                        .HasConstraintName("fk_orders_opinions_cleaners_opinion_id");

                    b.HasOne("PartyKlinest.ApplicationCore.Entities.Users.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orders_clients_client_id");

                    b.HasOne("PartyKlinest.ApplicationCore.Entities.Orders.Opinions.Opinion", "ClientsOpinion")
                        .WithMany()
                        .HasForeignKey("ClientsOpinionId")
                        .HasConstraintName("fk_orders_opinions_clients_opinion_id");

                    b.Navigation("Address");

                    b.Navigation("Cleaner");

                    b.Navigation("CleanersOpinion");

                    b.Navigation("Client");

                    b.Navigation("ClientsOpinion");
                });

            modelBuilder.Entity("PartyKlinest.ApplicationCore.Entities.Users.Cleaners.ScheduleEntry", b =>
                {
                    b.HasOne("PartyKlinest.ApplicationCore.Entities.Users.Cleaners.Cleaner", "Cleaner")
                        .WithMany("ScheduleEntries")
                        .HasForeignKey("CleanerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_schedule_entries_cleaners_cleaner_id");

                    b.Navigation("Cleaner");
                });

            modelBuilder.Entity("PartyKlinest.ApplicationCore.Entities.Users.Cleaners.Cleaner", b =>
                {
                    b.Navigation("ScheduleEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
